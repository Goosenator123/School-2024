{"version":3,"file":"bundlec78e9b0d1ea33ae24fe3.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AAC6G;AACjB;AAC5F,8BAA8B,mFAA2B,CAAC,4FAAquFAAuF,UAAU,UAAU,YAAY,aAAa,OAAO,KAAK,YAAY,WAAW,YAAY,aAAa,OAAO,KAAK,YAAY,WAAW,UAAU,UAAU,UAAU,YAAY,aAAa,aAAa,WAAW,MAAM,KAAK,UAAU,YAAY,WAAW,UAAU,YAAY,aAAa,OAAO,KAAK,YAAY,WAAW,UAAU,UAAU,UAAU,UAAU,UAAU,MAAM,KAAK,YAAY,WAAW,YAAY,WAAW,UAAU,UAAU,MAAM,KAAK,YAAY,WAAW,UAAU,OAAO,KAAK,YAAY,WAAW,UAAU,UAAU,UAAU,YAAY,aAAa,WAAW,YAAY,aAAa,aAAa,aAAa,WAAW,YAAY,aAAa,aAAa,OAAO,KAAK,YAAY,aAAa,aAAa,WAAW,MAAM,KAAK,YAAY,WAAW,YAAY,WAAW,UAAU,UAAU,MAAM,KAAK,YAAY,WAAW,YAAY,WAAW,UAAU,MAAM,KAAK,UAAU,MAAM,KAAK,UAAU,MAAM,KAAK,UAAU,YAAY,WAAW,YAAY,WAAW,UAAU,YAAY,aAAa,aAAa,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,YAAY,6BAA6B,kBAAkB,mBAAmB,+BAA+B,0BAA0B,KAAK,cAAc,0CAA0C,qBAAqB,yBAAyB,gCAAgC,KAAK,qBAAqB,2BAA2B,eAAe,gBAAgB,qBAAqB,sBAAsB,+BAA+B,oCAAoC,qCAAqC,oBAAoB,KAAK,gBAAgB,qBAAqB,yBAAyB,sBAAsB,sBAAsB,gCAAgC,4BAA4B,KAAK,uBAAuB,gCAAgC,wBAAwB,eAAe,gBAAgB,qBAAqB,sBAAsB,oBAAoB,KAAK,uBAAuB,2BAA2B,kBAAkB,mCAAmC,mBAAmB,mBAAmB,mBAAmB,KAAK,cAAc,2BAA2B,sBAAsB,qBAAqB,KAAK,uBAAuB,2BAA2B,gBAAgB,iBAAiB,oBAAoB,oBAAoB,+BAA+B,gCAAgC,sBAAsB,gCAAgC,4BAA4B,iDAAiD,oCAAoC,qBAAqB,yBAAyB,2BAA2B,kCAAkC,KAAK,qBAAqB,2BAA2B,gCAAgC,2BAA2B,oBAAoB,KAAK,qBAAqB,2BAA2B,kBAAkB,mCAAmC,mBAAmB,mBAAmB,mBAAmB,KAAK,mCAAmC,2BAA2B,iBAAiB,oCAAoC,kBAAkB,oBAAoB,KAAK,qBAAqB,iBAAiB,KAAK,sBAAsB,kBAAkB,KAAK,gBAAgB,qBAAqB,oDAAoD,qBAAqB,0CAA0C,wBAAwB,sBAAsB,4BAA4B,gCAAgC,oCAAoC,KAAK,sBAAsB,mDAAmD,KAAK,oCAAoC,uBAAuB,wCAAwC,KAAK,mBAAmB;AACvwH;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;ACzI1B;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,gDAAgD;AAChD;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sFAAsF,qBAAqB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sDAAsD,qBAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpFa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACfA,iEAAe,qBAAuB,wDAAwD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACC9F,MAAkG;AAClG,MAAwF;AACxF,MAA+F;AAC/F,MAAkH;AAClH,MAA2G;AAC3G,MAA2G;AAC3G,MAAsG;AACtG;AACA;;AAEA;;AAEA,4BAA4B,qGAAmB;AAC/C,wBAAwB,kHAAa;AACrC,iBAAiB,uGAAa;AAC9B,iBAAiB,+FAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,sFAAO;;;;AAIgD;AACxE,OAAO,iEAAe,sFAAO,IAAI,sFAAO,UAAU,sFAAO,mBAAmB,EAAC;;;;;;;;;;;ACxBhE;;AAEb;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnFa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACTa;;AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;AACjF;AACA;AACA;AACA;AACA;;;;;;;;;;ACTa;;AAEb;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yDAAyD;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC5Da;;AAEb;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACkJ;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA,uEAAuE;AACvE,0EAA0E;AAC1E,2EAA2E;AAC3E,mEAAmE;AACnE,mEAAmE;AACnE,+BAA+B,oBAAoB,cAAc;AACjE;AACA,iCAAiC,wDAAe;AAChD;AACA;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA,iCAAiC,mEAA0B;AAC3D;AACA;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC,iDAAiD;AACjD,+BAA+B,oBAAoB,cAAc;AACjE;AACA,iCAAiC,uDAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wBAAwB;AACxD;AACA,wBAAwB,wDAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,kDAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA,iCAAiC,oBAAoB;AACrD;AACA;AACA,iCAAiC,sDAAa;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA,iCAAiC,sDAAa;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,UAAU;AACV,0CAA0C;AAC1C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,6BAA6B,IAAI,cAAc;AAC/C,uBAAuB;AACvB,kBAAkB;AAClB,qBAAqB;AACrB;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACtSA;AACsD;AACtuBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mEAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AAYC,CAAC;;;;;;;;;;;;;;ACzXF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCrDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;;;;;;;;;;;;;;ACAA;AAC6B;AACmB;AAC0L;AAC/I;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mEAAsB,uCAAuC;AACjE,IAAI,gEAAgB,IAAI;AACxB;AACA,iBAAiB;AACjB;AACA;AACA,iDAAiD,4DAAU,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,oCAAoC,2DAAe,EAAE;AAC3D,MAAM,+CAA+C,sEAA0B,EAAE;AACjF,MAAM,6CAA6C,0DAAc,cAAc;AAC/E,MAAM,6CAA6C,0DAAc,cAAc;AAC/E,MAAM,qCAAqC,qDAAS,EAAE;AACtD,MAAM,kCAAkC,yDAAa,EAAE;AACvD,MAAM,mCAAmC,0DAAc,EAAE;AACzD,MAAM,uCAAuC,8DAAkB,EAAE;AACjE,MAAM,8BAA8B,qDAAS,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,sEAAyB;AAC7B,IAAI,4EAA4B;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,+CAA+C;AAC/C;AACA,KAAK;AACL;AACA,YAAY;AACZ;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mEAAsB;AAClC;AACA;AACA;AACA,yCAAyC,oBAAoB;AAC7D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,2CAA2C,oBAAoB;AAC/D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB,gEAAgB;AAChC;AACA;AACA;AACA,YAAY,mEAAsB;AAClC;AACA;AACA;AACA;AACA;AACA,gBAAgB,gEAAgB;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,IAAI,mEAAsB;AAC1B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mEAAsB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA,+BAA+B,iDAAQ;AACvC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,IAAI,iEAAiB;AACrB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,iCAAiC,oBAAoB;AACrD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAgB;AAC5B;AACA;AACA,UAAU;AACV;AACA,YAAY,gEAAgB;AAC5B;AACA;AACA;AACA,KAAK;AACL,CAAC,E","sources":["webpack://canvasdisplay/./src/styles/index.css","webpack://canvasdisplay/./node_modules/css-loader/dist/runtime/api.js","webpack://canvasdisplay/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://canvasdisplay/./src/assets/headerBg.svg","webpack://canvasdisplay/./src/styles/index.css?6349","webpack://canvasdisplay/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://canvasdisplay/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://canvasdisplay/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://canvasdisplay/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://canvasdisplay/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://canvasdisplay/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://canvasdisplay/./src/scripts/animations.js","webpack://canvasdisplay/./src/scripts/classes.js","webpack://canvasdisplay/./src/scripts/resolveCollision.js","webpack://canvasdisplay/webpack/bootstrap","webpack://canvasdisplay/webpack/runtime/compat get default export","webpack://canvasdisplay/webpack/runtime/define property getters","webpack://canvasdisplay/webpack/runtime/global","webpack://canvasdisplay/webpack/runtime/hasOwnProperty shorthand","webpack://canvasdisplay/webpack/runtime/make namespace object","webpack://canvasdisplay/webpack/runtime/publicPath","webpack://canvasdisplay/webpack/runtime/nonce","webpack://canvasdisplay/./src/scripts/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    user-select: none;\r\n}\r\n\r\nbody {\r\n    font-family: 'Roboto', sans-serif;\r\n    color: black;\r\n    overflow: hidden;\r\n    scroll-behavior: smooth;\r\n}\r\n\r\n#background {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    z-index: -1;\r\n}\r\n\r\nheader {\r\n    margin: auto;\r\n    font-size: 2.5vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n#headerCanvas {\r\n    background-color: black;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    z-index: -1;\r\n}\r\n\r\n#headerButton {\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translate(-50%);\r\n    bottom: 1%;\r\n    width: 90%;\r\n    height: 5%;\r\n}\r\n\r\nmain {\r\n    position: relative;\r\n    height: 100vh;\r\n    width: 100vw;\r\n}\r\n\r\n#displayTitle {\r\n    position: absolute;\r\n    top: 3%;\r\n    left: 1%;\r\n    width: 20vw;\r\n    height: 5vh;\r\n    min-width: fit-content;\r\n    min-height: fit-content;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(25, 25, 25, 0.50);\r\n    backdrop-filter: blur(10px);\r\n    color: white;\r\n    font-size: 1.5vw;\r\n    padding: 1.5vw 5vw;\r\n    border: 0.3vw solid white;\r\n}\r\n\r\n#mainCanvas {\r\n    position: relative;\r\n    background-color: white;\r\n    position: relative;\r\n    z-index: -1;\r\n}\r\n\r\n#mainButton {\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translate(-50%);\r\n    bottom: 1%;\r\n    width: 90%;\r\n    height: 5%;\r\n}\r\n\r\n#leftButton, #rightButton {\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    width: 3%;\r\n    height: 50%;\r\n}\r\n\r\n#leftButton {\r\n    left: 1%;\r\n}\r\n\r\n#rightButton {\r\n    right: 1%;\r\n}\r\n\r\nbutton {\r\n    border: none;\r\n    background-color: rgba(255, 255, 255, 0.05);\r\n    color: white;\r\n    transition: background-color 0.3s;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    backdrop-filter: blur(10px);\r\n}\r\n\r\nbutton:hover {\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.material-symbols-outlined {\r\n    font-size: 2vw;\r\n    color: rgba(255, 255, 255, 0.5);\r\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/index.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,iBAAiB;AACrB;;AAEA;IACI,iCAAiC;IACjC,YAAY;IACZ,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN,OAAO;IACP,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,4BAA4B;IAC5B,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,gBAAgB;IAChB,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,uBAAuB;IACvB,eAAe;IACf,MAAM;IACN,OAAO;IACP,YAAY;IACZ,aAAa;IACb,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,0BAA0B;IAC1B,UAAU;IACV,UAAU;IACV,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,WAAW;IACX,WAAW;IACX,sBAAsB;IACtB,uBAAuB;IACvB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,wCAAwC;IACxC,2BAA2B;IAC3B,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,yBAAyB;AAC7B;;AAEA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,0BAA0B;IAC1B,UAAU;IACV,UAAU;IACV,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,2BAA2B;IAC3B,SAAS;IACT,WAAW;AACf;;AAEA;IACI,QAAQ;AACZ;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,2CAA2C;IAC3C,YAAY;IACZ,iCAAiC;IACjC,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,2BAA2B;AAC/B;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,cAAc;IACd,+BAA+B;AACnC\",\"sourcesContent\":[\"* {\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    box-sizing: border-box;\\r\\n    user-select: none;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    font-family: 'Roboto', sans-serif;\\r\\n    color: black;\\r\\n    overflow: hidden;\\r\\n    scroll-behavior: smooth;\\r\\n}\\r\\n\\r\\n#background {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100vw;\\r\\n    height: 100vh;\\r\\n    background-size: cover;\\r\\n    background-position: center;\\r\\n    background-repeat: no-repeat;\\r\\n    z-index: -1;\\r\\n}\\r\\n\\r\\nheader {\\r\\n    margin: auto;\\r\\n    font-size: 2.5vw;\\r\\n    height: 100vh;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n#headerCanvas {\\r\\n    background-color: black;\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100vw;\\r\\n    height: 100vh;\\r\\n    z-index: -1;\\r\\n}\\r\\n\\r\\n#headerButton {\\r\\n    position: absolute;\\r\\n    left: 50%;\\r\\n    transform: translate(-50%);\\r\\n    bottom: 1%;\\r\\n    width: 90%;\\r\\n    height: 5%;\\r\\n}\\r\\n\\r\\nmain {\\r\\n    position: relative;\\r\\n    height: 100vh;\\r\\n    width: 100vw;\\r\\n}\\r\\n\\r\\n#displayTitle {\\r\\n    position: absolute;\\r\\n    top: 3%;\\r\\n    left: 1%;\\r\\n    width: 20vw;\\r\\n    height: 5vh;\\r\\n    min-width: fit-content;\\r\\n    min-height: fit-content;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    background-color: rgba(25, 25, 25, 0.50);\\r\\n    backdrop-filter: blur(10px);\\r\\n    color: white;\\r\\n    font-size: 1.5vw;\\r\\n    padding: 1.5vw 5vw;\\r\\n    border: 0.3vw solid white;\\r\\n}\\r\\n\\r\\n#mainCanvas {\\r\\n    position: relative;\\r\\n    background-color: white;\\r\\n    position: relative;\\r\\n    z-index: -1;\\r\\n}\\r\\n\\r\\n#mainButton {\\r\\n    position: absolute;\\r\\n    left: 50%;\\r\\n    transform: translate(-50%);\\r\\n    bottom: 1%;\\r\\n    width: 90%;\\r\\n    height: 5%;\\r\\n}\\r\\n\\r\\n#leftButton, #rightButton {\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    transform: translateY(-50%);\\r\\n    width: 3%;\\r\\n    height: 50%;\\r\\n}\\r\\n\\r\\n#leftButton {\\r\\n    left: 1%;\\r\\n}\\r\\n\\r\\n#rightButton {\\r\\n    right: 1%;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n    border: none;\\r\\n    background-color: rgba(255, 255, 255, 0.05);\\r\\n    color: white;\\r\\n    transition: background-color 0.3s;\\r\\n    cursor: pointer;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    backdrop-filter: blur(10px);\\r\\n}\\r\\n\\r\\nbutton:hover {\\r\\n    background-color: rgba(255, 255, 255, 0.1);\\r\\n}\\r\\n\\r\\n.material-symbols-outlined {\\r\\n    font-size: 2vw;\\r\\n    color: rgba(255, 255, 255, 0.5);\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","export default __webpack_public_path__ + \"assets/headerBgab3c50040210aab5cfa26688d247bb79.svg\";","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// Get canvas context and element\r\nimport { BouncingCircles, InteractiveBouncingCircles, CircularMotion, Collision, GalacticLight, GravityCircle, getDistance }  from './classes.js';\r\n\r\n// Get canvas context and element\r\nconst canvas = document.querySelector('canvas');\r\nconst ctx = canvas.getContext('2d');\r\n\r\n// Object Array to store different 2D elements\r\nlet objectArray = [];\r\n\r\n// Function that updateObjectArray\r\nfunction clearObjectArray() {\r\n    objectArray = [];\r\n}\r\n\r\n// Function that updateObjectArray\r\nfunction updateObjectArray(updatedArray) {\r\n    objectArray = updatedArray;\r\n}\r\n\r\n// Function that update deltaTime for animations\r\nlet deltaTime = 0;\r\nfunction updateDeltaTimeForAnimations(time) {\r\n    deltaTime = time;\r\n}\r\n\r\n// Get random integer from a min and max value\r\nfunction randomIntFromRange(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\n// Function that clear screen\r\nfunction clearScreen(opacity) {\r\n    ctx.beginPath();\r\n    ctx.rect(0, 0, canvas.width, canvas.height);\r\n    ctx.fillStyle = `rgba(0, 0, 0, ${opacity})`;\r\n    ctx.fill();\r\n    ctx.closePath();\r\n}\r\n\r\n// Function for bouncing circles\r\nfunction bouncingCircles() {\r\n    // Check if initialGeneration is true\r\n    if (objectArray.length === 0) {\r\n        let spawnCount = Math.min(canvas.width, canvas.height) / 10;\r\n        // Create circles\r\n        for (let i = 0; i < spawnCount; i++) {\r\n            // Declaring variable\r\n            let radius = Math.min(canvas.width, canvas.height) * 0.05; // Set radius\r\n            let x = Math.random() * (canvas.width - radius * 2) + radius; // Set x coordinate\r\n            let y = Math.random() * (canvas.height - radius * 2) + radius; // Set y coordinate\r\n            let dx = Math.floor((Math.random() - 0.5) * 100) / 10; // Set x velocity\r\n            let dy = Math.floor((Math.random() - 0.5) * 100) / 10; // Set y velocity\r\n            let color = `hsl(${Math.random() * 360}, 50%, 50%)`; // Set color\r\n\r\n            objectArray.push(new BouncingCircles(x, y, dx, dy, radius, color));\r\n        }\r\n    }\r\n\r\n    // Animates the circles\r\n    clearScreen(1);\r\n    for (let i = 0; i < objectArray.length; i++) {\r\n        objectArray[i].update();\r\n    }\r\n}\r\n\r\n// Function for interactive bouncing circles\r\nfunction interactiveBouncingCircles() {\r\n    if (objectArray.length === 0) {\r\n        let spawnCount = Math.max(canvas.width, canvas.height);\r\n        // Create circles\r\n        for (let i = 0; i < spawnCount; i++) {\r\n            // Declaring variable\r\n            let radius = Math.random() * 5 + 4; // Set radius\r\n            let x = Math.random() * (innerWidth - radius * 2) + radius;\r\n            let y = Math.random() * (innerHeight - radius * 2) + radius;\r\n            let dx = Math.floor((Math.random() - 0.5) * 100) / 20;\r\n            let dy = Math.floor((Math.random() - 0.5) * 100) / 20;\r\n            let color = `hsl(${Math.random() * 360}, 50%, 50%)`;\r\n    \r\n            objectArray.push(new InteractiveBouncingCircles(x, y, dx, dy, radius, color));\r\n        }\r\n    }\r\n\r\n    // Clear canvas\r\n    clearScreen(1);\r\n    for (let i = 0; i < objectArray.length; i++) {\r\n        objectArray[i].update();\r\n    }\r\n}\r\n\r\n// Function for circular motion version 1\r\nfunction circularMotion(version) {\r\n    if (objectArray.length === 0) {\r\n        // Create particle\r\n        for (let i = 0; i < 200; i ++) {\r\n            let size = (Math.random() * 10) + 5; // Set size\r\n            let color = `hsl(${Math.random() * 360}, 50%, 50%)`; // Set color\r\n\r\n            objectArray.push(new CircularMotion(canvas.width / 2, canvas.height / 2, size, color, version));\r\n        }\r\n    }\r\n\r\n    // Animate the circular motion\r\n    clearScreen(0.05);\r\n    objectArray.forEach(particle => {\r\n        particle.update();\r\n    });\r\n}\r\n\r\n// Function for collision\r\nfunction collision() {\r\n    let spawnCount = Math.min(canvas.width, canvas.height) * 0.5;\r\n    if (objectArray.length === 0) {\r\n        // Create and insert particle into array\r\n        for (let i = 0; i < spawnCount; i++) {\r\n\r\n            // Set random variables\r\n            let radius = Math.min(canvas.width, canvas.height) * 0.02;\r\n            let color = `hsl(${Math.random() * 360}, 50%, 50%)`;\r\n            let x = randomIntFromRange(radius, canvas.width - radius);\r\n            let y = randomIntFromRange(radius, canvas.height - radius);\r\n            let dx = randomIntFromRange(-3, 3);\r\n            let dy = randomIntFromRange(-3, 3);\r\n\r\n            // Make sure it's not the first particle\r\n            if (i !== 0) {\r\n                // Check for collisions with existing particle\r\n                for (let j = 0; j < objectArray.length; j++) {\r\n                    // Execute if (x, y) coordinates are too close \r\n                    if (getDistance(x, y, objectArray[j].x, objectArray[j].y) < (radius + objectArray[j].radius + 2)) {\r\n                        // Reassign x, y coordinates\r\n                        x = randomIntFromRange(radius, canvas.width - radius);\r\n                        y = randomIntFromRange(radius, canvas.height - radius);\r\n\r\n                        // Reset for loop to recheck if new coordinates are far enough\r\n                        j = -1;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Insert particle object into array if no collision\r\n            objectArray.push(new Collision(x, y, radius, color, dx, dy));\r\n        }\r\n    }\r\n\r\n    // Animate the collision\r\n    clearScreen(1);\r\n    objectArray.forEach(particle => {\r\n        particle.update(objectArray);\r\n    })\r\n}\r\n\r\n// Function for galactic light\r\nlet opacity = 1; // Set opacity\r\nlet radians = 0 // Set radian value\r\nfunction galacticLight() {\r\n    let spawnCount = canvas.width * canvas.height / 500;\r\n    let margin = canvas.width * canvas.height / canvas.width;\r\n\r\n    if (objectArray.length === 0) {\r\n        for (let i = 0; i < spawnCount; i++) {\r\n            const canvasWidth = canvas.width + margin;\r\n            const canvasHeight = canvas.height + margin;\r\n            const x = Math.random() * canvasWidth - canvasWidth / 2;\r\n            const y = Math.random() * canvasHeight - canvasHeight / 2;\r\n            const color = `hsl(${Math.random() * 360}, 50%, 50%)`;\r\n            const radius = 2 * Math.random();\r\n    \r\n            objectArray.push(new GalacticLight(x, y, radius, color));\r\n        }\r\n    }\r\n\r\n    // Clear the canvas\r\n    clearScreen(opacity);\r\n\r\n    // Save the current transformation state\r\n    ctx.save();\r\n\r\n    // Translate the canvas origin to the center of the canvas\r\n    ctx.translate(canvas.width / 2, canvas.height / 2);\r\n\r\n    // Rotate the canvas by the specified radians\r\n    ctx.rotate(radians);\r\n\r\n    // Iterate over each light and update its position or properties\r\n    objectArray.forEach(light => {\r\n        light.update(); // Update each light after each loop\r\n    });\r\n\r\n    // Restore the previously saved transformation state\r\n    ctx.restore();\r\n\r\n    // Increment the radians value to rotate the canvas gradually\r\n    radians += 0.003 * deltaTime;\r\n\r\n    // Change bg color opacity depending on mouseDown\r\n    if (mouseDown && opacity >= 0.03) {\r\n        opacity -= 0.01 * deltaTime;\r\n    } else if (!mouseDown && opacity < 1) {\r\n        opacity += 0.005 * deltaTime;\r\n    }\r\n}\r\n\r\n// Function for gravity circles\r\nfunction gravityCircles() {\r\n    if (objectArray.length === 0) {\r\n        let spawnCount = Math.min(canvas.width, canvas.height) / 2.5;\r\n        // Create and insert ball in array\r\n        for (let i = 0; i < spawnCount; i++) {\r\n            // Setting random variables\r\n            let radius = randomIntFromRange(8, 30);\r\n            let x = randomIntFromRange(radius, (canvas.width - radius))\r\n            let y = randomIntFromRange(radius, ((canvas.height - radius) + 1))\r\n            let dx = randomIntFromRange(-2, 2);\r\n            let dy = randomIntFromRange(3, 5);\r\n            let color = `hsl(${Math.random() * 360}, 50%, 50%)`;\r\n\r\n            // Inserting gravityCircle Objects\r\n            objectArray.push(new GravityCircle(x, y, dx, dy, radius, color));\r\n        }\r\n    }\r\n\r\n    // Clear canvas\r\n    clearScreen(1);\r\n\r\n    // Move the ball Objects in ballArray\r\n    for (let i = 0; i < objectArray.length; i++) {\r\n        objectArray[i].update();\r\n    }\r\n}\r\n\r\n// Function for realistic fireworks\r\nfunction realisticFireworks() {\r\n    // Clear canvas\r\n    clearScreen(0.05);\r\n\r\n    // Update particles\r\n    objectArray.forEach((particle, index) => {\r\n        // Check if particle is no longer visible\r\n        if (particle.opacity > 0) {\r\n            particle.update(); // Update\r\n        } else {\r\n            objectArray.splice(index, 1); // Erase particle from array\r\n        }\r\n    });\r\n}\r\n\r\n// Define properties of the wave\r\nconst wave = {\r\n    length: 0.005, // Length of each wave cycle\r\n    amplitude: 150, // Amplitude of the wave\r\n    frequency: 0.015, // Frequency of the wave (speed of oscillation)\r\n};\r\n\r\n// Function for sine waves\r\nlet increment = wave.frequency; // Initialize the increment for the wa\r\nfunction sineWaves() {\r\n    // Clear the canvas\r\n    clearScreen(0.05);\r\n\r\n    // Begin drawing the wave\r\n    ctx.beginPath();\r\n    // Move the drawing cursor to the starting point of the wave (slightly off-screen to hide initial line)\r\n    ctx.moveTo(-20, canvas.height / 2);\r\n\r\n    // Draw the wave using a loop across the width of the canvas\r\n    for (let i = 0; i < canvas.width; i += 0.1) {\r\n        // Calculate the vertical position of each point on the wave using sine and cosine functions\r\n        const waveHeight = canvas.height / 2 + Math.sin(i * wave.length + increment) * wave.amplitude * Math.cos((increment * 2) / 1.5);\r\n        // Draw a line segment to the calculated point\r\n        ctx.lineTo(i, waveHeight);\r\n    }\r\n\r\n    // Set the stroke color of the wave based on the current increment value\r\n    const hue = Math.abs(360 * Math.sin(increment/10)); // Calculate hue for color variation\r\n    ctx.strokeStyle = `hsl(${hue}, 50%, 50%)`; // Set stroke color\r\n    ctx.lineWidth = 5; // Set the thickness of the lines\r\n    ctx.stroke(); // Render the wave on the canvas\r\n    ctx.closePath(); // Close the path to prepare for next drawing\r\n\r\n    // Increase the increment value to animate the wave\r\n    increment += wave.frequency * deltaTime; // Increment controls the speed of the wave animation\r\n}\r\n\r\nlet mouseDown = false;\r\nwindow.addEventListener('mousedown', () => {\r\n    mouseDown = true;\r\n})\r\n\r\nwindow.addEventListener('mouseup', () => {\r\n    mouseDown = false;\r\n})\r\n\r\n// Export functions\r\nexport {\r\n    clearObjectArray,\r\n    updateObjectArray,\r\n    bouncingCircles,\r\n    circularMotion,\r\n    collision,\r\n    galacticLight,\r\n    gravityCircles,\r\n    interactiveBouncingCircles,\r\n    realisticFireworks,\r\n    sineWaves,\r\n    updateDeltaTimeForAnimations\r\n}","// Import\r\nimport { resolveCollision } from \"./resolveCollision\";\r\n\r\n// Get canvas context and element\r\nconst canvas = document.querySelector('canvas');\r\nconst ctx = canvas.getContext('2d');\r\n\r\n// Mouse coordinates\r\nlet mouse = {\r\n    x: canvas.width / 2,\r\n    y: canvas.height / 2\r\n};\r\n\r\n// Set deltaTime\r\nlet deltaTime = 1;\r\n\r\n// Function that updateObjectArray\r\nfunction updateMouseCoordinates(x, y) {\r\n    mouse.x = x;\r\n    mouse.y = y;\r\n}\r\n\r\n// Function that update deltaTime\r\nfunction updateDeltaTimeForClasses(time) {\r\n    deltaTime = time;\r\n}\r\n\r\n// Random interger generating function\r\nfunction randomIntFromRange(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\n// Get the distance between 2 objects\r\nfunction getDistance(x1, y1, x2, y2) {\r\n    let xDistance = x2 - x1;\r\n    let yDistance = y2 - y1;\r\n\r\n    // Return the distance between the 2 objects using Pythagorean Formula\r\n    return Math.sqrt(Math.pow(xDistance, 2) + Math.pow(yDistance, 2));\r\n}\r\n\r\n// BouncingCircles Object\r\nclass BouncingCircles {\r\n    constructor(x, y, dx, dy, radius, color) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.dx = dx;\r\n        this.dy = dy;\r\n        this.radius = radius;\r\n        this.color = color;\r\n    }\r\n\r\n    draw() {\r\n        // Drawing a circle\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true);\r\n        ctx.fillStyle = this.color;\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    }\r\n\r\n    update() {\r\n        // Check if circle hit the side of the screen\r\n        if (this.x > (canvas.width - this.radius) || this.x < (0 + this.radius)) {\r\n            this.dx = -this.dx;\r\n        }\r\n\r\n        if (this.y > (canvas.height - this.radius) || this.y < (0 + this.radius)) {\r\n            this.dy = -this.dy;\r\n        }\r\n\r\n        // Modify x coordinate\r\n        this.x += this.dx * deltaTime;\r\n        this.y += this.dy * deltaTime;\r\n\r\n        // Call Circle.draw() function;\r\n        this.draw();\r\n    }\r\n}\r\n\r\n// InteractiveBouncingCircle Object\r\nclass InteractiveBouncingCircles {\r\n    constructor(x, y, dx, dy, radius, color) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.dx = dx;\r\n        this.dy = dy;\r\n        this.radius = radius;\r\n        this.initialRadius = radius;\r\n        this.color = color;\r\n    }\r\n\r\n    draw() {\r\n        // Drawing a circle\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true);\r\n        ctx.fillStyle = this.color;\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    }\r\n\r\n    update() {\r\n        // Check if circle hit the side of the screen\r\n        if (this.x > (innerWidth - this.radius) || this.x < (0 + this.radius)) {\r\n            this.dx = -this.dx;\r\n        }\r\n\r\n        if (this.y > (innerHeight - this.radius) || this.y < (0 + this.radius)) {\r\n            this.dy = -this.dy;\r\n        }\r\n\r\n        // Modify x coordinate\r\n        this.x += this.dx * deltaTime;\r\n        this.y += this.dy * deltaTime;\r\n\r\n        // Interaction with the position of users mouse\r\n        let distance = 40; // Set distance\r\n        let maxRadius = this.initialRadius * 5 + 10;\r\n\r\n        if (mouse.x - this.x < distance && mouse.x - this.x > -distance && mouse.y - this.y < distance && mouse.y - this.y > -distance) {\r\n            if (this.radius < maxRadius) {\r\n                this.radius += 3;\r\n            }\r\n        } else if (this.radius > this.initialRadius) {\r\n            this.radius -= 3;\r\n        }\r\n\r\n        // Call Circle.draw() function;\r\n        this.draw();\r\n    }\r\n}\r\n\r\n// CircularMotion class with different versions\r\nclass CircularMotion { // Particle Class\r\n    constructor(x, y, size, color, version) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.size = size;\r\n        this.color = color;\r\n        this.radians = Math.random() * Math.PI * 2; // Set random radians (starting point)\r\n        this.velocity = 0.03; // Rate of change for the radians\r\n        this.lastMouse = {\r\n            x: x,\r\n            y: y\r\n        };\r\n        this.version = version;\r\n\r\n        if (version === 1) {\r\n            //! Version 1\r\n            this.distanceFromCenter = randomIntFromRange(100, 400); // Set random distance from center\r\n        } else if (this.version === 2) {\r\n            //! Version 2\r\n            this.distanceFromCenter = {\r\n                x: randomIntFromRange(100, 400),\r\n                y: randomIntFromRange(100, 400)\r\n            }\r\n        }\r\n    }\r\n\r\n    update() {\r\n        const lastPoint = {\r\n            x: this.x,\r\n            y: this.y\r\n        };\r\n\r\n        // Move points over time\r\n        this.radians += this.velocity * deltaTime; // Increase radians value over time\r\n\r\n        // Gradually \r\n        this.lastMouse.x += (mouse.x - this.lastMouse.x) * 0.03;\r\n        this.lastMouse.y += (mouse.y - this.lastMouse.y) * 0.03;\r\n\r\n        // Circular Motion\r\n        if (this.version === 1) {\r\n            //! Version 1\r\n            this.x = this.lastMouse.x + Math.cos(this.radians) * this.distanceFromCenter;\r\n            this.y = this.lastMouse.y + Math.sin(this.radians) * this.distanceFromCenter;\r\n            this.draw(lastPoint);\r\n        } else if (this.version === 2) {\r\n            //! Version 2\r\n            this.x = this.lastMouse.x + Math.cos(this.radians) * this.distanceFromCenter.x;\r\n            this.y = this.lastMouse.y + Math.sin(this.radians) * this.distanceFromCenter.y;\r\n            this.draw(lastPoint);\r\n        }\r\n    }\r\n\r\n    draw(lastPoint) {\r\n        //! Trail with lines\r\n        ctx.beginPath();\r\n        ctx.moveTo(lastPoint.x, lastPoint.y);\r\n        ctx.lineWidth = this.size;\r\n        ctx.lineTo(this.x, this.y);\r\n        ctx.strokeStyle = this.color;\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n\r\n        //! Trail with circles\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.size / 2, 0, Math.PI * 2, false);\r\n        ctx.fillStyle = this.color;\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    }\r\n}\r\n\r\n// Collision class\r\nclass Collision {\r\n    constructor(x, y, radius, color, dx, dy) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.velocity = {\r\n            x: dx,\r\n            y: dy\r\n        }\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.mass = this.radius ** 2 * Math.PI; // Mass proportional to Particle area\r\n        this.opacity = 0.2;\r\n    }\r\n\r\n    draw() {\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true);\r\n        ctx.save();\r\n        ctx.globalAlpha = this.opacity;\r\n        ctx.fillStyle = this.color;\r\n        ctx.fill();\r\n        ctx.restore();\r\n        ctx.closePath()\r\n    }\r\n\r\n    update(objectArray) {\r\n        this.draw();\r\n\r\n        // Cycle through every particle\r\n        for (let i = 0; i < objectArray.length; i++) {\r\n            // Do not detect collision with itself\r\n            if (this === objectArray[i]) continue;\r\n\r\n            // Check collision\r\n            if (getDistance(this.x, this.y, objectArray[i].x, objectArray[i].y) < (this.radius + objectArray[i].radius)) {\r\n                // Resolve collision\r\n                resolveCollision(this, objectArray[i]);\r\n            }\r\n        }\r\n\r\n        // Check for mouse collision\r\n        if (getDistance(this.x, this.y, mouse.x, mouse.y) < 120 && this.opacity <= 0.7) {\r\n            this.opacity += 0.05;\r\n        } else if (this.opacity > 0.2) {\r\n            this.opacity -= 0.05;\r\n            this.opacity = Math.max(0.2, this.opacity); // Make sure this.opacity doesnt go below 0.2\r\n        }\r\n\r\n        // Reset x velocity if touching border\r\n        if ((this.x + this.radius) > canvas.width || (this.x - this.radius) < 0) {\r\n            this.velocity.x = -this.velocity.x;\r\n        }\r\n\r\n        // Reset y velocity if touching border\r\n        if ((this.y + this.radius) > canvas.height || (this.y - this.radius) < 0) {\r\n            this.velocity.y = -this.velocity.y;\r\n        }\r\n\r\n        // Move Particle based on velocity\r\n        this.x += this.velocity.x * deltaTime;\r\n        this.y += this.velocity.y * deltaTime;\r\n    }\r\n}\r\n\r\n// GalacticLight class\r\nclass GalacticLight {\r\n    constructor(x, y, radius, color) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n    }\r\n\r\n    draw() {\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n        ctx.shadowColor = this.color;\r\n        ctx.shadowBlur = 15;\r\n        ctx.fillStyle = this.color;\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    }\r\n\r\n    update() {\r\n        this.draw();\r\n    }\r\n}\r\n\r\n// GravityCircle Object\r\nconst circleGravity = 0.8;\r\nconst circleFriction = 0.99;\r\nclass GravityCircle {\r\n    constructor(x, y, dx, dy, radius, color) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.dx = dx;\r\n        this.dy = dy;\r\n    }\r\n\r\n    draw() {\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true);\r\n        ctx.fillStyle = this.color;\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    }\r\n\r\n    update() {\r\n        if ((this.y + this.radius + this.dy) > canvas.height) {\r\n            this.dy = -this.dy * circleFriction;\r\n        } else {\r\n            this.dy += circleGravity;\r\n        }\r\n\r\n        if ((this.x + this.radius) > canvas.width || (this.x - this.radius) < 0) {\r\n            this.dx = -this.dx;\r\n        }\r\n\r\n        this.x += this.dx * deltaTime;\r\n        this.y += this.dy * deltaTime;\r\n        this.draw();\r\n    }\r\n}\r\n\r\n// Firework Class\r\nconst fireworkGravity = 0.03;\r\nconst fireworkFriction = 0.99;\r\nclass Firework {\r\n    constructor(x, y, radius, color, velocity, opacity) {\r\n        this.x = x,\r\n        this.y = y,\r\n        this.radius = radius,\r\n        this.color = color,\r\n        this.velocity = velocity,\r\n        this.opacity = opacity\r\n    }\r\n\r\n    draw() {\r\n        ctx.save();\r\n        ctx.globalAlpha = this.opacity;\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n        ctx.fillStyle = this.color;\r\n        ctx.fill();\r\n        ctx.closePath();\r\n        ctx.restore();\r\n    }\r\n\r\n    update() {\r\n        this.draw();\r\n        this.velocity.x *= fireworkFriction;\r\n        this.velocity.y += fireworkGravity;\r\n        this.x += this.velocity.x * deltaTime;\r\n        this.y += this.velocity.y * deltaTime;\r\n        this.opacity -= 0.005; // Fade out effect\r\n    }\r\n}\r\n\r\nexport {\r\n    BouncingCircles,\r\n    InteractiveBouncingCircles,\r\n    CircularMotion,\r\n    Collision,\r\n    GalacticLight,\r\n    GravityCircle,\r\n    Firework,\r\n    updateMouseCoordinates,\r\n    getDistance,\r\n    updateDeltaTimeForClasses,\r\n} // Export classes","// Rotate function to rotate velocities so its 1D\r\nfunction rotate(velocity, angle) {\r\n    const rotatedVelocity = {\r\n        x: (Math.cos(angle) * velocity.x) - (Math.sin(angle) * velocity.y),\r\n        y: (Math.sin(angle) * velocity.x) + (Math.cos(angle) * velocity.y)\r\n    }\r\n\r\n    // Return rotated velocity\r\n    return rotatedVelocity;\r\n}\r\n\r\n// Redirect direction upon collision\r\nfunction resolveCollision(particle, otherParticle) {\r\n    // Get the difference in velocities of both particles\r\n    const xVelocityDiff = particle.velocity.x - otherParticle.velocity.x;\r\n    const yVelocityDiff = particle.velocity.y - otherParticle.velocity.y;\r\n\r\n    // Get distance of x and y of both particles\r\n    const xDistance = otherParticle.x - particle.x;\r\n    const yDistance = otherParticle.y - particle.y;\r\n    \r\n    // Check if clipping / overlap\r\n    if (xVelocityDiff * xDistance + yVelocityDiff * yDistance >= 0) {\r\n        // Get angle of the triangle formed by the two colliding particles\r\n        const angle = -Math.atan2((otherParticle.y - particle.y), (otherParticle.x - particle.x))\r\n    \r\n        // Set mass of both first and second particle\r\n        const m1 = particle.mass;\r\n        const m2 = otherParticle.mass;\r\n    \r\n        // Velocity before collision\r\n        const u1 = rotate(particle.velocity, angle);\r\n        const u2 = rotate(otherParticle.velocity, angle);\r\n    \r\n        // Velocity after the 1D collision (Using One-dimensional Newtonian equasion)\r\n        const v1 = {\r\n            x: (u1.x * (m1 - m2) + 2 * m2 * u2.x) / (m1 + m2),\r\n            y: u1.y\r\n        }\r\n        const v2 = {\r\n            x: (u2.x * (m2 - m1) + 2 * m1 * u1.x) / (m1 + m2),\r\n            y: u2.y\r\n        }\r\n    \r\n        // Velocity after rotation axis back to original location\r\n        const finalV1 = rotate(v1, -angle);\r\n        const finalV2 = rotate(v2, -angle);\r\n    \r\n        // Reassigning particle volacity to simulate bounce effect\r\n        particle.velocity = finalV1;\r\n        otherParticle.velocity = finalV2;\r\n    }\r\n}\r\n\r\nexport {\r\n    resolveCollision\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.nc = undefined;","// Imports\r\nimport '../styles/index.css';\r\nimport background from '../assets/headerBg.svg';\r\nimport { clearObjectArray, updateObjectArray, bouncingCircles, circularMotion, collision, galacticLight, interactiveBouncingCircles, gravityCircles, realisticFireworks, sineWaves, updateDeltaTimeForAnimations } from './animations.js';\r\nimport { updateMouseCoordinates, Firework, updateDeltaTimeForClasses } from './classes.js';\r\n\r\n// HTML element\r\nconst backgroundElement = document.getElementById('background');\r\nconst canvas = document.getElementById('mainCanvas');\r\nconst headerButton = document.getElementById('headerButton');\r\nconst mainButton = document.getElementById('mainButton');\r\nconst leftRighButton = ['leftButton', 'rightButton'];\r\n\r\n// Get canvas context\r\nconst ctx = canvas.getContext('2d');\r\n\r\n// Function to set the size of the canvas to match the window size\r\nfunction setCanvasSize() {\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n    updateMouseCoordinates(canvas.width / 2, canvas.height / 2); // Set mouse coordinates to the center of the canvas\r\n    clearObjectArray(); // Clear updateObjectArray function\r\n}\r\nsetCanvasSize(); // Call the function to set the initial canvas size\r\n\r\n// Set background image using style.backgroundImage\r\nbackgroundElement.style.backgroundImage = `url(${background})`;\r\n\r\n// Variables\r\nlet atMain = false;\r\nlet index = 0;\r\nlet clickCooldown = 0;\r\n\r\n// Project list\r\nconst projects = [\r\n    { title: 'BouncingCircles', function: bouncingCircles },\r\n    { title: 'InteractiveBouncingCircles', function: interactiveBouncingCircles },\r\n    { title: 'CircularMotion Version 1', function: circularMotion, version: 1 },\r\n    { title: 'CircularMotion Version 2', function: circularMotion, version: 2 },\r\n    { title: 'DynamicCollision', function: collision },\r\n    { title: 'GalacticLight', function: galacticLight },\r\n    { title: 'GravityCircles', function: gravityCircles },\r\n    { title: 'RealisticFireworks', function: realisticFireworks },\r\n    { title: 'SineWaves', function: sineWaves },\r\n];\r\n\r\n// Animate function\r\nlet lastTime = 0;\r\nfunction animate(timestamp) {\r\n    // Make a loop\r\n    requestAnimationFrame(animate);\r\n    if (clickCooldown > 0) clickCooldown--;\r\n\r\n    // Calculate deltaTime\r\n    const deltaTime = (timestamp - lastTime) / 16;\r\n    updateDeltaTimeForClasses(deltaTime);\r\n    updateDeltaTimeForAnimations(deltaTime);\r\n    lastTime = timestamp;\r\n\r\n    // Check if at project index for each project in projects array\r\n    projects.forEach((project, projectIndex) => {\r\n        if (index === projectIndex) {\r\n            const displayTitle = document.getElementById('displayTitle');\r\n            displayTitle.textContent = project.title;\r\n            const projectVersion = project.version ? project.version : 0;\r\n\r\n            // Check if project doesnt have a version\r\n            if (projectVersion === 0) {\r\n                project.function(); // Call project function without version\r\n                return;\r\n            }\r\n\r\n            project.function(project.version); // Call project function with their version\r\n        }\r\n    });\r\n}\r\nanimate(1); // Call animate function\r\n\r\n// Event listener for arrow keys\r\nlet isScrolling = false; // Flag to prevent multiple key presses\r\nwindow.addEventListener('keydown', (e) => {\r\n    if (isScrolling) {\r\n        return;\r\n    }\r\n\r\n    // Execute code based on key pressed\r\n    switch (e.key) {\r\n        default: // Default case (always update mouse coordinates to the center of the canvas)\r\n            updateMouseCoordinates(canvas.width / 2, canvas.height / 2);\r\n\r\n        case 'ArrowDown':\r\n            const mainSection = document.getElementById('main');\r\n            mainSection.scrollIntoView({ behavior: 'smooth' });\r\n            isScrolling = true;\r\n            setTimeout(() => {\r\n                isScrolling = false;\r\n                atMain = true;\r\n            }, 1000);\r\n            break;\r\n\r\n        case 'ArrowUp':\r\n            const headerSection = document.getElementById('header');\r\n            headerSection.scrollIntoView({ behavior: 'smooth' });\r\n            isScrolling = true;\r\n            setTimeout(() => {\r\n                isScrolling = false;\r\n                atMain = false;\r\n            }, 1000);\r\n            break;\r\n\r\n        case 'ArrowRight':\r\n            if (atMain && index < projects.length - 1) {\r\n                ctx.clearRect(0, 0, innerWidth, innerHeight);\r\n                clearObjectArray();\r\n                fireworkArray = [];\r\n                index++;\r\n            }\r\n            updateMouseCoordinates(canvas.width / 2, canvas.height / 2);\r\n            break;\r\n\r\n        case 'ArrowLeft':\r\n            if (atMain && index > 0) {\r\n                ctx.clearRect(0, 0, innerWidth, innerHeight);\r\n                clearObjectArray();\r\n                fireworkArray = [];\r\n                index--;\r\n            }\r\n            break;\r\n    }\r\n});\r\n\r\n// Event listener for resize\r\nwindow.addEventListener('resize', () => {\r\n    setCanvasSize();\r\n});\r\n\r\n// Event listener for mouse movement\r\nwindow.addEventListener('mousemove', (event) => {\r\n    updateMouseCoordinates(event.x, event.y);\r\n});\r\n\r\n// Event listener for mouse click\r\nlet fireworkArray = [];\r\nwindow.addEventListener('click', (event) => {\r\n    if (projects[index].title !== 'RealisticFireworks' || clickCooldown > 0) return;\r\n\r\n    // Update mouse coordinates\r\n    updateMouseCoordinates(event.x, event.y);\r\n\r\n    // Set variables\r\n    const particleCount = 2000;\r\n    const angleIncrement = (Math.PI * 2) / particleCount;\r\n    const power = 15;\r\n\r\n    // Generate particles\r\n    for (let i = 0; i < particleCount; i++) {\r\n        // Set random color\r\n        let color = `hsl(${Math.random() * 360}, 50%, 50%)`;\r\n\r\n        // Assign particle properties\r\n        fireworkArray.push(new Firework(event.x, event.y, 5, color, { \r\n            x: Math.cos(angleIncrement * i) * Math.random() * power, \r\n            y: Math.sin(angleIncrement * i) * Math.random() * power\r\n        }, Math.random()));\r\n    }\r\n\r\n    // Update objectArray\r\n    updateObjectArray(fireworkArray);\r\n    clickCooldown = 30;\r\n});\r\n\r\n// Event listener for header button click\r\nheaderButton.addEventListener('click', () => {\r\n    const mainSection = document.getElementById('main');\r\n    mainSection.scrollIntoView({ behavior: 'smooth' });\r\n    atMain = true;\r\n});\r\n\r\n// Event listener for main button click\r\nmainButton.addEventListener('click', () => {\r\n    const headerSection = document.getElementById('header');\r\n    headerSection.scrollIntoView({ behavior: 'smooth' });\r\n    atMain = false;\r\n});\r\n\r\n// Event listener for left and right button click\r\nleftRighButton.forEach((button) => {\r\n    const element = document.getElementById(button);\r\n    element.addEventListener('click', () => {\r\n        if (button === 'rightButton' && index < projects.length - 1) {\r\n            ctx.clearRect(0, 0, innerWidth, innerHeight);\r\n            clearObjectArray();\r\n            fireworkArray = [];\r\n            index++;\r\n        } else if (button === 'leftButton' && index > 0) {\r\n            ctx.clearRect(0, 0, innerWidth, innerHeight);\r\n            clearObjectArray();\r\n            fireworkArray = [];\r\n            index--;\r\n        }\r\n    });\r\n});"],"names":[],"sourceRoot":""}